# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Defaults
defaults: &workdirAndImage
  working_directory: ~/workspace

executors:
  docker-executor:
    docker:
      - image: circleci/buildpack-deps:bionic

# Orchestrate or schedule a set of jobs
workflows:
  # Docker image build workflow
  docker-image-build:
    # Run the build job
    jobs:
      - checkout_code
      - test:
          requires:
            - checkout_code
      - ubuntu-image-build:
          requires:
            - test
          filters:
            branches:
              only: master
            tags:
              only: /.*v[0-9.]+$/
      - alpine-image-build:
          requires:
            - test
          filters:
            branches:
              only: master
            tags:
              only: /.*v[0-9.]+$/


jobs:
  checkout_code:
    executor: docker-executor
    resource_class: small
    steps:
      - checkout:
          path: ~/workspace/repo
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - repo/

  test:
    docker:
      - image: koalaman/shellcheck-alpine:stable
    executor: docker-executor
    resource_class: small
    working_directory: ~/workspace/repo
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Run tests
          command: |
            echo "Running tests";
            find . -type f -regex ".*\.sh" | xargs shellcheck --external-sources
          when: always

  ubuntu-image-build:
    executor: docker-executor
    working_directory: ~/workspace/repo
    environment:
      DOCKER_IMAGE_NAME: spiritsree/docker-torrent-client
      DOCKER_TAG: ''
    steps:
      - attach_workspace:
          at: ~/workspace
      - setup_remote_docker
      - run:
          name: Ubuntu Image Build And Push
          command: |
            echo "Tag for the build is  << pipeline.git.tag >>"
            DOCKER_TAG=$(echo "<< pipeline.git.tag >>" | sed -E 's/.*?(v[0-9.]+)$/\1-ubuntu/')
            export $DOCKER_TAG
            if [[ -n "$DOCKER_TAG" ]]; then
              docker build -t $DOCKER_IMAGE_NAME:$DOCKER_TAG -f Dockerfile.ubuntu .
              echo $DOCKER_CLOUD_PASS | docker login -u $DOCKER_CLOUD_USER --password-stdin
              docker push $DOCKER_IMAGE_NAME:$DOCKER_TAG
              docker logout
            else
              echo "Not a tagged build..."
            fi

  alpine-image-build:
    executor: docker-executor
    working_directory: ~/workspace/repo
    environment:
      DOCKER_IMAGE_NAME: spiritsree/docker-torrent-client
      DOCKER_TAG: ''
    steps:
      - attach_workspace:
          at: ~/workspace
      - setup_remote_docker
      - run:
          name: Alpine Image Build and Push
          command: |
            echo "Tag for the build is  << pipeline.git.tag >>"
            DOCKER_TAG=$(echo "<< pipeline.git.tag >>" | sed -E 's/.*?(v[0-9.]+)$/\1-alpine/')
            export $DOCKER_TAG
            if [[ -n "$DOCKER_TAG" ]]; then
              docker build -t $DOCKER_IMAGE_NAME:$DOCKER_TAG -f Dockerfile.alpine .
              echo $DOCKER_CLOUD_PASS | docker login -u $DOCKER_CLOUD_USER --password-stdin
              docker push $DOCKER_IMAGE_NAME:$DOCKER_TAG
              docker logout
            else
              echo "Not a tagged build..."
            fi
